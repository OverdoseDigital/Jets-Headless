// Both native and custom selects must have the same width/height.
.selectNative,
.selectCustom {
  position: relative;
  width: 100%;
}

// Make sure the custom select does not mess with the layout
.selectCustom {
  position: absolute;
  top: 0;
  left: 0;
  display: none;
  height: 100%;

  &.isActive {
    .selectCustom-options {
      display: block;
    }

    .selectCustom-trigger {
      border-color: var(--color-grey-5);
      border-bottom-color: transparent;

      /* stylelint-disable selector-max-specificity */
      &::before {
        content: '';
        position: absolute;
        z-index: 2;
        top: 100%;
        left: rem(16px);
        width: calc(100% - 32px);
        height: 1px;
        background-color: var(--color-grey-2);
        pointer-events: none;
      }
      /* stylelint-enable selector-max-specificity */
    }
  }
}

// This media query detects devices where the primary
// input mechanism can hover over elements. (e.g. computers with a mouse)
@media (hover: hover) {
  // Since we are using a mouse, it's safe to show the custom select.
  .selectCustom {
    display: block;
  }

  // In a computer using keyboard? Then let's hide back the custom select
  // while the native one is focused:
  .selectNative:focus + .selectCustom {
    display: none;
  }
}

/* Add the focus states too, They matter, always! */
.selectNative:focus,
.selectCustom.isActive .selectCustom-trigger {
  outline: none;

  /* stylelint-disable selector-max-specificity */
  &::after {
    transform: rotate(180deg);
  }
  /* stylelint-enable selector-max-specificity */
}

.custom-select-hybrid {
  position: relative;

  .selectLabel {
    @extend %small;
    display: block;
    margin: 0 0 $spacing-xs 0;
    color: var(--color-grey-5);
    width: 100%;
  }
}

.selectWrapper {
  position: relative;
}

.selectNative,
.selectCustom-trigger {
  font-size: rem(14px);
  min-height: rem(48px);
  border: 1px solid var(--color-grey-2);
  background-color: var(--color-white);
  padding: $spacing-xs $spacing-sm;
  transition: border-color 0.2s ease;
  color: var(--color-black);
}

.selectCustom-trigger {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  display: flex;
  align-items: center;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    right: rem(16px);
    width: rem(16px);
    height: rem(16px);
    background-size: rem(16px 16px);
    background-repeat: no-repeat;
    background-position: center center;
    margin-top: rem(-8px);
  }

  &:hover {
    border-color: var(--color-grey-5);
  }
}

.selectCustom-options {
  font-size: rem(13px);
  line-height: 1.385;
  position: absolute;
  z-index: 1;
  top: calc(100% - 1px);
  left: 0;
  width: 100%;
  background-color: var(--color-white);
  padding: 0;
  border: 1px solid var(--color-grey-5);
  border-top-color: transparent;
  overflow: hidden;
  display: none;
}

.selectCustom-option {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: $spacing-sm;
  color: var(--color-black);

  &.isHover,
  &:hover {
    color: var(--color-black);
    background-color: var(--color-grey-1);
    cursor: pointer;
  }

  &.isActive {
    color: var(--color-black);

    &::after {
      content: '';
      width: rem(16px);
      height: rem(16px);
      background-size: rem(16px 16px);
      background-repeat: no-repeat;
      background-position: center center;
    }
  }
}
